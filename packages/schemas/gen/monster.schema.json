{
  "$ref": "#/definitions/DmMonster",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "Damage": {
      "description": "The base damage an attack does. A string triple of format \"damage_type,dice_roll,???\".\n- List of damage types: melee, ranged, fire, ice, dark, starlight, poison, bleed.   It might be that you can also combine multiple types using an & character, for example \"melee&dark&poison,1d6+35,0\" but I am not sure whether that works and what exactly it does.\n- dice_roll can be either a number or the TTRPG dice notation.\n- ??? I think this is always 0 for damage dealt. This third number only becomes relevant for `damagetaken01` properties where it seems to represent how much more damage is being taken by this type of attack, effectively meaning elemental weaknesses.",
      "examples": [
        "melee,1,0",
        "fire,2d8+30,0",
        "poison,1,0"
      ],
      "type": "string"
    },
    "DmMonster": {
      "additionalProperties": false,
      "description": "Docs at https://dungeonmans.fandom.com/wiki/Mods:_Adding_Monsters",
      "properties": {
        "attack_sfx": {
          "description": "What sound plays when this monster attacks?",
          "type": "string"
        },
        "bBlockTileEntry": {
          "const": true,
          "description": "Whether it is blocked to swap places with the target by bumping into the target. Typically true, i.e. monsters block your path and vice-versa.",
          "type": "boolean"
        },
        "banter": {
          "type": "string"
        },
        "base_defeatarmor": {
          "type": "integer"
        },
        "basicattackparticle": {
          "description": "What particle effect draws in the world when this guy attacks?",
          "type": "string"
        },
        "championpower_01": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_02": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_03": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_04": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_05": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_06": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_07": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_08": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_09": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_10": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_11": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_12": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_13": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_14": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_15": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_16": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_17": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_18": {
          "$ref": "#/definitions/PowerRef"
        },
        "championpower_19": {
          "$ref": "#/definitions/PowerRef"
        },
        "class": {
          "const": "dmMonster",
          "description": "The type of class. Constant.",
          "type": "string"
        },
        "cointype": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "enum": [
                "copper_coins_small",
                "copper_coins_medium",
                "copper_coins_large",
                "copper_coins_huge",
                "silver_coins_small",
                "silver_coins_medium",
                "silver_coins_large",
                "silver_coins_huge",
                "gold_coins_small",
                "gold_coins_medium",
                "gold_coins_large",
                "gold_coins_huge"
              ],
              "type": "string"
            }
          ],
          "description": "Reference to an entitydefs of class dmCoins inside ActorData/coins.txt"
        },
        "hasRanged": {
          "description": "Whether the actor has ranged attacks. If true, set the several properties starting with ranged* and tooclosedistance.",
          "type": "boolean"
        },
        "health": {
          "type": "integer"
        },
        "knowledge": {
          "$ref": "#/definitions/DmMonsterKnowledge"
        },
        "level": {
          "type": "integer"
        },
        "meleedamage_01": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_02": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_03": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_04": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_05": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_06": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_07": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_08": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_09": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_10": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_11": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_12": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_13": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_14": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_15": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_16": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_17": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_18": {
          "$ref": "#/definitions/Damage"
        },
        "meleedamage_19": {
          "$ref": "#/definitions/Damage"
        },
        "name": {
          "description": "Display name",
          "type": "string"
        },
        "nametable": {
          "type": "string"
        },
        "power_01": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_02": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_03": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_04": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_05": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_06": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_07": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_08": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_09": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_10": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_11": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_12": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_13": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_14": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_15": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_16": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_17": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_18": {
          "$ref": "#/definitions/PowerRef"
        },
        "power_19": {
          "$ref": "#/definitions/PowerRef"
        },
        "rangeDamage_01": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_02": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_03": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_04": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_05": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_06": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_07": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_08": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_09": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_10": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_11": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_12": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_13": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_14": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_15": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_16": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_17": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_18": {
          "$ref": "#/definitions/Damage"
        },
        "rangeDamage_19": {
          "$ref": "#/definitions/Damage"
        },
        "rangedAttackRange": {
          "type": "integer"
        },
        "rangedAttackSprite": {
          "description": "TODO: This probably is the projectile sprite.",
          "type": "string"
        },
        "rangedattackrecharge": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ],
          "description": "Integer or Dice roll string"
        },
        "scale_adjustdamage": {
          "type": "number"
        },
        "scale_adjusthealth": {
          "type": "number"
        },
        "scale_max": {
          "type": "integer"
        },
        "scale_min": {
          "type": "integer"
        },
        "sprite": {
          "description": "reference to an entitydef inside spritedata/",
          "type": "string"
        },
        "steakdata": {
          "description": "Monsters drop steaks of themselves sometimes, and those steaks can be used to feed your birds so they learn powers. Comma-separated string of four values \"drop_chance,tough_or_swift,melee_or_ranged,power\":\n- Odds of dropping a steak on death, 1 to 100 integer value.\n- Tough or Swift? -1 for tough, 0 for neither, 1 for Swift.\n- Melee or Ranged? -1 for melee, 0 for neither, 1 for Ranged.\n- Powers that can be learned by your bird for eating this steak. Reference to an entity in specialpowerdata/.",
          "type": "string"
        },
        "tooclosedistance": {
          "type": "integer"
        }
      },
      "required": [
        "attack_sfx",
        "bBlockTileEntry",
        "banter",
        "base_defeatarmor",
        "basicattackparticle",
        "class",
        "cointype",
        "hasRanged",
        "health",
        "knowledge",
        "level",
        "name",
        "nametable",
        "scale_adjustdamage",
        "scale_adjusthealth",
        "scale_max",
        "scale_min",
        "sprite"
      ],
      "type": "object"
    },
    "DmMonsterKnowledge": {
      "enum": [
        "scrobolds",
        "lesser_beasts",
        "greater_beasts",
        "punks",
        "bandits",
        "bees",
        "brigands",
        "lizardmens",
        "orcs",
        "undeads",
        "warlords",
        "cultists",
        "purpleonians",
        "slimes",
        "snakes",
        "scorpocompys"
      ],
      "type": "string"
    },
    "PowerRef": {
      "description": "Reference to an entity of class \"dmSpecialPower\" in specialpowerdata/.",
      "type": "string"
    }
  }
}
